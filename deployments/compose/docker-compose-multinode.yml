# Multinode Elemta Deployment with Valkey Distributed Rate Limiting
#
# This configuration demonstrates a horizontally scaled Elemta deployment with:
# - 3 Elemta SMTP nodes (ports 2525, 2526, 2527)
# - Shared Valkey for distributed rate limiting
# - Shared queue directory
# - Individual metrics endpoints
#
# Usage:
#   docker compose -f docker-compose.yml -f docker-compose-multinode.yml up -d

services:
  # Node 1 (already defined in docker-compose.yml as elemta-node0)
  # Using port 2525

  # Node 2
  elemta-node1:
    image: elemta:latest
    container_name: elemta-node1
    restart: unless-stopped
    ports:
      - "2526:2525"  # SMTP
      - "8081:8080"  # Metrics
    volumes:
      - elemta_queue:/app/queue
      - elemta_logs:/app/logs
    environment:
      NODE_ID: node1
      ELEMTA_CONFIG_PATH: /app/config/elemta-generated.toml
      VALKEY_URL: valkey://elemta-valkey:6379
      VALKEY_KEY_PREFIX: "elemta:ratelimit:"
    networks:
      - elemta_network
    depends_on:
      - valkey
      - elemta-ldap
      - elemta-rspamd
      - elemta-clamav
      - elemta-dovecot
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2525"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Node 3
  elemta-node2:
    image: elemta:latest
    container_name: elemta-node2
    restart: unless-stopped
    ports:
      - "2527:2525"  # SMTP
      - "8082:8080"  # Metrics
    volumes:
      - elemta_queue:/app/queue
      - elemta_logs:/app/logs
    environment:
      NODE_ID: node2
      ELEMTA_CONFIG_PATH: /app/config/elemta-generated.toml
      VALKEY_URL: valkey://elemta-valkey:6379
      VALKEY_KEY_PREFIX: "elemta:ratelimit:"
    networks:
      - elemta_network
    depends_on:
      - valkey
      - elemta-ldap
      - elemta-rspamd
      - elemta-clamav
      - elemta-dovecot
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2525"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

# Use the same networks and volumes from the main docker-compose.yml
# Note: When using multiple compose files, shared resources are automatically managed

