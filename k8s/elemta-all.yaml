---
# Storage resources
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elemta-queue-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elemta-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elemta-plugins-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: clamav-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rspamd-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rspamd-config-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Configuration resources
apiVersion: v1
kind: ConfigMap
metadata:
  name: elemta-config
data:
  elemta.conf: |
    [general]
    hostname = "mail.example.com"
    log_level = "debug"

    [smtp]
    enabled = true
    address = "0.0.0.0:25"
    greeting = "elemta ESMTP ready"
    max_message_size = 52428800
    timeout = 300

    [auth]
    enabled = false

    [antivirus]
    clamav_enabled = true
    clamav_address = "tcp://elemta-clamav:3310"
    clamav_timeout = 30
    clamav_scan_limit = 26214400

    [antispam]
    rspamd_enabled = true
    rspamd_address = "http://elemta-rspamd:11333"
    rspamd_timeout = 30
    rspamd_scan_limit = 26214400
    rspamd_threshold = 1.0
    rspamd_reject_spam = true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rspamd-config
data:
  worker-normal.inc: |
    # Settings for the normal worker (protocol interface)
    bind_socket = "0.0.0.0:11333";
    
    # Allow connections from any IP
    secure_ip = null;
    
    # Disable password protection for testing
    password = null;
    
    # Enable extended protocol
    enable_password = null;
    
    # Increase timeout for better reliability
    timeout = 60s;
    
  worker-controller.inc: |
    # Settings for the controller worker (web interface)
    bind_socket = "0.0.0.0:11334";
    
    # Allow connections from any IP
    secure_ip = null;
    
    # Disable password protection for testing
    password = null;
    
    # Enable extended protocol
    enable_password = null;
    
    # Increase timeout for better reliability
    timeout = 60s;
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elemta-node
  labels:
    app: elemta-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elemta-node
  template:
    metadata:
      labels:
        app: elemta-node
    spec:
      containers:
      - name: elemta
        image: elemta_node:latest
        imagePullPolicy: Never
        command: ["/bin/sh", "-c"]
        args:
          - |
            cp /config-volume/elemta.conf /app/config/elemta.conf
            echo "#!/bin/sh" > /app/entrypoint.sh
            echo "set -e" >> /app/entrypoint.sh
            echo "echo \"Environment variables:\"" >> /app/entrypoint.sh
            echo "env" >> /app/entrypoint.sh
            echo "echo \"Working directory:\"" >> /app/entrypoint.sh
            echo "pwd" >> /app/entrypoint.sh
            echo "ls -la" >> /app/entrypoint.sh
            echo "echo \"Looking for server binary:\"" >> /app/entrypoint.sh
            echo "echo \"/app/elemta\"" >> /app/entrypoint.sh
            echo "echo \"Starting Elemta server...\"" >> /app/entrypoint.sh
            echo "exec /app/elemta server" >> /app/entrypoint.sh
            chmod +x /app/entrypoint.sh
            /app/entrypoint.sh
        ports:
        - containerPort: 25
          name: smtp
          protocol: TCP
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        volumeMounts:
        - name: queue-volume
          mountPath: /app/queue
        - name: logs-volume
          mountPath: /app/logs
        - name: config-volume
          mountPath: /config-volume
        - name: plugins-volume
          mountPath: /app/plugins
        env:
        - name: TZ
          value: "UTC"
        - name: ELEMTA_CONFIG_PATH
          value: "/app/config/elemta.conf"
        - name: DEBUG
          value: "true"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        livenessProbe:
          tcpSocket:
            port: 25
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 25
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
      - name: clamav
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            # Install netcat
            apk add --no-cache netcat-openbsd
            
            # Create a simple mock ClamAV service
            echo "Starting mock ClamAV service on port 3310..."
            
            # Create a response file
            echo -e "PONG\nOK" > /tmp/clamav_response
            
            # Run the service
            while true; do
              nc -l -p 3310 < /tmp/clamav_response
              sleep 0.1
            done
        ports:
        - containerPort: 3310
          name: clamav
        env:
        - name: TZ
          value: "UTC"
        resources:
          limits:
            cpu: "100m"
            memory: "64Mi"
          requests:
            cpu: "50m"
            memory: "32Mi"
        livenessProbe:
          tcpSocket:
            port: 3310
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 3310
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
      - name: rspamd
        image: rspamd/rspamd:latest
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        ports:
        - containerPort: 11333
          name: rspamd
        - containerPort: 11334
          name: rspamd-web
        volumeMounts:
        - name: rspamd-data
          mountPath: /var/lib/rspamd
        - name: rspamd-config
          mountPath: /etc/rspamd
        - name: rspamd-custom-config
          mountPath: /etc/rspamd/local.d
        env:
        - name: TZ
          value: "UTC"
        livenessProbe:
          httpGet:
            path: /
            port: 11334
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 11334
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
      volumes:
      - name: queue-volume
        persistentVolumeClaim:
          claimName: elemta-queue-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: elemta-logs-pvc
      - name: config-volume
        configMap:
          name: elemta-config
      - name: plugins-volume
        persistentVolumeClaim:
          claimName: elemta-plugins-pvc
      - name: rspamd-data
        persistentVolumeClaim:
          claimName: rspamd-data-pvc
      - name: rspamd-config
        persistentVolumeClaim:
          claimName: rspamd-config-pvc
      - name: rspamd-custom-config
        configMap:
          name: rspamd-config
---
# Services
apiVersion: v1
kind: Service
metadata:
  name: elemta
  labels:
    app: elemta-node
spec:
  type: NodePort
  ports:
  - port: 25
    targetPort: 25
    nodePort: 30025
    protocol: TCP
    name: smtp
  selector:
    app: elemta-node
---
apiVersion: v1
kind: Service
metadata:
  name: elemta-clamav
  labels:
    app: elemta
spec:
  type: ClusterIP
  ports:
  - port: 3310
    targetPort: 3310
    protocol: TCP
    name: clamav
  selector:
    app: elemta
---
apiVersion: v1
kind: Service
metadata:
  name: elemta-rspamd
  labels:
    app: elemta
spec:
  type: NodePort
  ports:
  - port: 11333
    targetPort: 11333
    protocol: TCP
    name: rspamd
  - port: 11334
    targetPort: 11334
    nodePort: 30334
    protocol: TCP
    name: rspamd-web
  selector:
    app: elemta 