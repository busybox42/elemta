#!/bin/bash

# Script to generate test messages for the Elemta queue

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Generating Test Messages for Elemta Queue${NC}"
echo "=========================================="

# Number of test messages to generate
NUM_MESSAGES=${1:-10}

# SMTP server details
SMTP_HOST="localhost"
SMTP_PORT="2525"

# Function to generate a random domain
random_domain() {
    local domains=("example.com" "test.org" "mail.net" "elemta.io" "smtp.dev")
    local random_index=$((RANDOM % 5))
    echo "${domains[$random_index]}"
}

# Function to generate a random non-existent domain
random_nonexistent_domain() {
    local prefix=$(cat /dev/urandom | tr -dc 'a-z' | fold -w 8 | head -n 1)
    echo "${prefix}.invalid"
}

# Function to generate a random recipient that will cause delivery to be deferred
random_deferred_recipient() {
    local types=("deferred" "delay" "retry" "bounce" "hold")
    local random_index=$((RANDOM % 5))
    echo "${types[$random_index]}@$(random_nonexistent_domain)"
}

# Check queue before sending messages
echo -e "\n${YELLOW}Checking queue before sending messages:${NC}"
./scripts/elemta-cli.sh queue stats

# Generate random test messages
echo -e "\n${YELLOW}Sending test messages...${NC}"
for i in $(seq 1 $NUM_MESSAGES); do
    # Generate a random message ID
    MSG_ID=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)
    
    # Generate random sender
    SENDER="sender-${i}@$(random_domain)"
    
    # Use non-existent domains for all recipients to ensure they get queued
    RECIPIENT="recipient-${i}@$(random_nonexistent_domain)"
    
    # Generate random subject
    SUBJECT="Test Message ${i} - ${MSG_ID}"
    
    # Generate message content
    MESSAGE="From: ${SENDER}
To: ${RECIPIENT}
Subject: ${SUBJECT}
Message-ID: <${MSG_ID}@example.com>
Date: $(date -R)

This is test message ${i} with ID ${MSG_ID}.
This message was generated by the Elemta test queue generator.
"
    
    # Send the message using netcat
    echo "Sending message ${i}/${NUM_MESSAGES} from ${SENDER} to ${RECIPIENT}..."
    {
        sleep 1
        echo "EHLO example.com"
        sleep 0.5
        echo "MAIL FROM:<${SENDER}>"
        sleep 0.5
        echo "RCPT TO:<${RECIPIENT}>"
        sleep 0.5
        echo "DATA"
        sleep 0.5
        echo "${MESSAGE}"
        echo "."
        sleep 0.5
        echo "QUIT"
    } | nc $SMTP_HOST $SMTP_PORT
    
    echo "Message ${i}/${NUM_MESSAGES} sent."
    
    # Add a small delay between messages
    sleep 1
done

# Wait a moment for messages to be processed
echo -e "\n${YELLOW}Waiting for messages to be processed...${NC}"
sleep 5

# Check queue after sending messages
echo -e "\n${YELLOW}Checking queue after sending messages:${NC}"
./scripts/elemta-cli.sh queue stats

# List messages in the queue
echo -e "\n${YELLOW}Listing messages in the queue:${NC}"
./scripts/elemta-cli.sh queue list

echo -e "\n${GREEN}Test complete!${NC}"
echo "You can now use the following commands to manage the queue:"
echo "  ./scripts/elemta-cli.sh queue list     - List all messages in the queue"
echo "  ./scripts/elemta-cli.sh queue stats    - Show queue statistics"
echo "  ./scripts/elemta-cli.sh queue view ID  - View details of a specific message" 