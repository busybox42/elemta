name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  GO_VERSION: '1.22'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          make build
          
          # Package binary
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip elemta-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}.zip bin/elemta.exe
          else
            tar czf elemta-${{ steps.version.outputs.version }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C bin elemta
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: |
            *.tar.gz
            *.zip

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            busybox42/elemta
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    name: Create GitHub Release
    needs: [build, docker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: dist/

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -n "$PREV_TAG" ]; then
            echo "Generating changelog from $PREV_TAG to ${GITHUB_REF#refs/tags/}"
            CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
          else
            echo "Generating full changelog"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Save changelog to file
          echo "$CHANGELOG" > CHANGELOG.txt
          
          # Create release notes
          cat > RELEASE_NOTES.md << EOF
          ## What's Changed
          
          $CHANGELOG
          
          ## Docker Images
          
          \`\`\`bash
          docker pull busybox42/elemta:${GITHUB_REF#refs/tags/}
          docker pull ghcr.io/${{ github.repository }}:${GITHUB_REF#refs/tags/}
          \`\`\`
          
          ## Installation
          
          ### Binary
          Download the appropriate binary for your platform and extract it:
          
          \`\`\`bash
          tar xzf elemta-*-linux-amd64.tar.gz
          chmod +x elemta
          sudo mv elemta /usr/local/bin/
          \`\`\`
          
          ### Docker
          \`\`\`bash
          docker run -p 2525:2525 busybox42/elemta:${GITHUB_REF#refs/tags/}
          \`\`\`
          
          ## Full Changelog
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${GITHUB_REF#refs/tags/}
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_NOTES.md
          files: |
            dist/*.tar.gz
            dist/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update latest release
        run: |
          echo "Release ${GITHUB_REF#refs/tags/} published successfully!"

