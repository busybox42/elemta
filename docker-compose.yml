version: '3.8'

services:
  elemta:
    image: elemta_node:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: elemta-node0
    restart: unless-stopped
    ports:
      - "2525:2525"
      - "8080:8080"  # Metrics endpoint
      # Don't expose these ports to avoid conflicts
      # - "8080:8080"
      # - "8081:8081"
    volumes:
      - elemta_queue:/app/queue
      - elemta_logs:/app/logs
      - ./plugins:/app/plugins:ro
      - ./config/elemta-with-metrics.toml:/app/config/elemta.toml:ro
      - ./config/elemta.conf:/app/config/elemta.conf:ro
      - ./config/users.txt:/app/config/users.txt:ro
      - ./config/elemta.db:/app/config/elemta.db:rw
      - ./scripts/api_server.py:/app/api_server.py
    environment:
      - TZ=UTC
      - DEBUG=true
      - NODE_ID=0
      - TEST_MODE=true
      - ELEMTA_CONFIG_PATH=/app/config/elemta.toml
      - API_PORT=8081  # Used internally only
      - DELIVERY_HOST=elemta-dovecot
      - DELIVERY_PORT=2424
    tty: true
    stdin_open: true
    init: true
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2525"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - elemta_network
      - monitoring_network
    depends_on:
      - elemta-clamav
      - elemta-rspamd
      - elemta-api
      - elemta-dovecot
      - elemta-ldap

  elemta-api:
    image: python:3.9-slim
    container_name: elemta-api
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ./scripts/api_server.py:/app/api_server.py
      - elemta_queue:/app/queue:ro
    environment:
      - API_PORT=8081
    command: >
      bash -c "apt-get update && apt-get install -y curl && 
      python3 -u /app/api_server.py"
    networks:
      - elemta_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  elemta-web:
    image: elemta_node:latest
    container_name: elemta-web
    restart: unless-stopped
    ports:
      - "8025:8025"  # Web UI port
    volumes:
      - elemta_queue:/app/queue:ro
      - elemta_logs:/app/logs:ro
      - ./web:/app/web:ro
      - ./config/elemta.db:/app/config/elemta.db:ro
    environment:
      - TZ=UTC
      - NODE_ID=web
      - ELEMTA_CONFIG_PATH=/app/config/elemta.toml
    entrypoint: []
    command: ["/app/elemta", "web", "--listen", "0.0.0.0:8025", "--auth-enabled", "--queue-dir", "/app/queue", "--web-root", "/app/web/static"]
    networks:
      - elemta_network
    depends_on:
      - elemta-api
      - elemta
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8025/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  elemta-clamav:
    image: clamav/clamav:latest
    container_name: elemta-clamav
    restart: unless-stopped
    networks:
      - elemta_network
    volumes:
      - clamav_data:/var/lib/clamav
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3310"]
      interval: 45s
      timeout: 15s
      retries: 5
      start_period: 180s

  elemta-rspamd:
    image: rspamd/rspamd:latest
    container_name: elemta-rspamd
    restart: unless-stopped
    networks:
      - elemta_network
    volumes:
      - rspamd_data:/var/lib/rspamd
      - ./docker/rspamd/override.d/worker-controller.conf:/etc/rspamd/override.d/worker-controller.conf
      - ./docker/rspamd/override.d/worker-proxy.conf:/etc/rspamd/override.d/worker-proxy.conf
      - ./docker/rspamd/override.d/worker-normal.conf:/etc/rspamd/override.d/worker-normal.conf
      - ./docker/rspamd/override.d/modules.conf:/etc/rspamd/override.d/modules.conf
      - ./docker/rspamd/override.d/logging.conf:/etc/rspamd/override.d/logging.conf
      - ./docker/rspamd/override.d/actions.conf:/etc/rspamd/override.d/actions.conf
    ports:
      - "11334:11334"  # Web interface
    healthcheck:
      # Use pidof to check if rspamd is running
      test: ["CMD-SHELL", "pidof rspamd || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
  
  elemta-ldap:
    image: osixia/openldap:latest
    container_name: elemta-ldap
    hostname: elemta-ldap
    ports:
      - "1389:389"     # LDAP port
      - "1636:636"     # LDAPS port  
    environment:
      - LDAP_ORGANISATION=Example Corp
      - LDAP_DOMAIN=example.com
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_BASE_DN=dc=example,dc=com
      - LDAP_TLS_VERIFY_CLIENT=never
      - LDAP_RFC2307BIS_SCHEMA=true
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=true
      - LDAP_TLS=false
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
    networks:
      - elemta_network
    healthcheck:
      test: ["CMD", "ldapsearch", "-x", "-D", "cn=admin,dc=example,dc=com", "-w", "admin", "-b", "dc=example,dc=com", "-s", "base", "-LLL"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  elemta-dovecot:
    image: alpine:latest
    container_name: elemta-dovecot
    hostname: elemta-dovecot
    ports:
      - "14143:14143"  # IMAP port
      - "2424:2424"    # LMTP port
      - "4190:4190"    # ManageSieve port
    command: >
      sh -c "apk add --no-cache dovecot dovecot-lmtpd dovecot-ldap dovecot-pigeonhole-plugin netcat-openbsd &&
             adduser -D -h /var/mail -u 5000 vmail 2>/dev/null || echo 'User vmail already exists' &&
             mkdir -p /var/mail &&
             mkdir -p /var/mail/john.smith@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/sarah.johnson@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/mike.davis@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/lisa.wilson@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/tom.anderson@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/emily.brown@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/robert.chen@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/jennifer.lee@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/david.kim@example.com/{new,cur,tmp} &&
             mkdir -p /var/mail/amanda.rodriguez@example.com/{new,cur,tmp} &&
             chown -R vmail:vmail /var/mail &&
             chmod -R 700 /var/mail &&
             mkdir -p /etc/dovecot /var/log &&
             touch /var/log/dovecot.log &&
             chown vmail:vmail /var/log/dovecot.log &&
             echo 'protocols = imap lmtp sieve' > /etc/dovecot/dovecot.conf &&
             echo 'listen = *' >> /etc/dovecot/dovecot.conf &&
             echo 'ssl = no' >> /etc/dovecot/dovecot.conf &&
             echo 'mail_debug = yes' >> /etc/dovecot/dovecot.conf && 
             echo 'auth_debug = yes' >> /etc/dovecot/dovecot.conf && 
             echo 'auth_debug_passwords = yes' >> /etc/dovecot/dovecot.conf && 
             echo 'auth_verbose = yes' >> /etc/dovecot/dovecot.conf &&
             echo 'mail_location = maildir:/var/mail/%u' >> /etc/dovecot/dovecot.conf &&
             echo 'mail_uid = vmail' >> /etc/dovecot/dovecot.conf &&
             echo 'mail_gid = vmail' >> /etc/dovecot/dovecot.conf &&
             echo 'lmtp_save_to_detail_mailbox = yes' >> /etc/dovecot/dovecot.conf &&
             echo 'auth_mechanisms = plain login' >> /etc/dovecot/dovecot.conf &&
             echo 'service lmtp {' >> /etc/dovecot/dovecot.conf &&
             echo '  inet_listener lmtp {' >> /etc/dovecot/dovecot.conf &&
             echo '    address = 0.0.0.0' >> /etc/dovecot/dovecot.conf &&
             echo '    port = 2424' >> /etc/dovecot/dovecot.conf &&
             echo '  }' >> /etc/dovecot/dovecot.conf &&
             echo '  user = vmail' >> /etc/dovecot/dovecot.conf &&
             echo '}' >> /etc/dovecot/dovecot.conf &&
             echo 'ssl = no' >> /etc/dovecot/dovecot.conf &&
             echo 'service imap-login {' >> /etc/dovecot/dovecot.conf &&
             echo '  inet_listener imap {' >> /etc/dovecot/dovecot.conf &&
             echo '    port = 14143' >> /etc/dovecot/dovecot.conf &&
             echo '  }' >> /etc/dovecot/dovecot.conf &&
             echo '}' >> /etc/dovecot/dovecot.conf &&
             echo 'service imap {' >> /etc/dovecot/dovecot.conf &&
             echo '}' >> /etc/dovecot/dovecot.conf &&
             echo 'service auth {' >> /etc/dovecot/dovecot.conf &&
             echo '  unix_listener auth-userdb {' >> /etc/dovecot/dovecot.conf &&
             echo '    mode = 0600' >> /etc/dovecot/dovecot.conf &&
             echo '    user = vmail' >> /etc/dovecot/dovecot.conf &&
             echo '  }' >> /etc/dovecot/dovecot.conf &&
             echo '}' >> /etc/dovecot/dovecot.conf &&
             echo 'passdb {' >> /etc/dovecot/dovecot.conf &&
             echo '  driver = ldap' >> /etc/dovecot/dovecot.conf &&
             echo '  args = /etc/dovecot/dovecot-ldap.conf.ext' >> /etc/dovecot/dovecot.conf &&
             echo '}' >> /etc/dovecot/dovecot.conf &&
             echo 'userdb {' >> /etc/dovecot/dovecot.conf &&
             echo '  driver = ldap' >> /etc/dovecot/dovecot.conf &&
             echo '  args = /etc/dovecot/dovecot-ldap.conf.ext' >> /etc/dovecot/dovecot.conf &&
             echo '}' >> /etc/dovecot/dovecot.conf &&
             echo 'hosts = elemta-ldap:389' > /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'ldap_version = 3' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'base = ou=people,dc=example,dc=com' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'deref = never' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'scope = subtree' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'dn = cn=admin,dc=example,dc=com' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'dnpass = admin' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'auth_bind = yes' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'auth_bind_userdn = uid=%n,ou=people,dc=example,dc=com' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'user_attrs = =uid=5000,=gid=5000,=home=/var/mail/%u' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'user_filter = (&(objectClass=posixAccount)(mail=%u))' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'pass_attrs = uid=user,userPassword=password' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'pass_filter = (&(objectClass=posixAccount)(mail=%u))' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'default_pass_scheme = SSHA' >> /etc/dovecot/dovecot-ldap.conf.ext &&
             echo 'log_path = /var/log/dovecot.log' >> /etc/dovecot/dovecot.conf &&
             echo 'info_log_path = /var/log/dovecot.log' >> /etc/dovecot/dovecot.conf &&
             echo 'debug_log_path = /var/log/dovecot.log' >> /etc/dovecot/dovecot.conf &&
             echo 'disable_plaintext_auth = no' >> /etc/dovecot/dovecot.conf &&
             echo 'Creating test message for testing...' &&
             mkdir -p /var/mail/recipient@example.com/new /var/mail/recipient@example.com/cur /var/mail/recipient@example.com/tmp &&
             chown -R vmail:vmail /var/mail/recipient@example.com &&
             echo 'From: sender@example.com' > /var/mail/recipient@example.com/cur/test-message:2,S &&
             echo 'To: recipient@example.com' >> /var/mail/recipient@example.com/cur/test-message:2,S &&
             echo 'Subject: Test Message' >> /var/mail/recipient@example.com/cur/test-message:2,S &&
             echo '' >> /var/mail/recipient@example.com/cur/test-message:2,S &&
             echo 'This is a test message.' >> /var/mail/recipient@example.com/cur/test-message:2,S &&
             chown vmail:vmail /var/mail/recipient@example.com/cur/test-message:2,S &&
             chmod 600 /var/mail/recipient@example.com/cur/test-message:2,S &&
             echo 'Starting Dovecot...' &&
             dovecot -F"
    networks:
      - elemta_network
    volumes:
      - dovecot_data:/var/mail
    restart: unless-stopped
    depends_on:
      - elemta-ldap
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "14143"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
      
  # Monitoring services

  prometheus:
    image: prom/prometheus:latest
    container_name: elemta-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  grafana:
    image: grafana/grafana:latest
    container_name: elemta-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=elemta123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring_network
    depends_on:
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  alertmanager:
    image: prom/alertmanager:latest
    container_name: elemta-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - prometheus

  # Webmail Interface
  elemta-roundcube:
    image: roundcube/roundcubemail:latest
    container_name: elemta-roundcube
    ports:
      - "8026:80"
    environment:
      - ROUNDCUBEMAIL_DB_TYPE=sqlite
      - ROUNDCUBEMAIL_SKIN=elastic
      - ROUNDCUBEMAIL_DEFAULT_HOST=elemta-dovecot
      - ROUNDCUBEMAIL_DEFAULT_PORT=14143
      - ROUNDCUBEMAIL_SMTP_SERVER=elemta
      - ROUNDCUBEMAIL_SMTP_PORT=2525
      - ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE=25M
      - ROUNDCUBEMAIL_ASPELL_ENABLE=true
    volumes:
      - roundcube_data:/var/roundcube
      - ./docker/roundcube/config/config.inc.php:/var/roundcube/config/config.inc.php:ro
    networks:
      - elemta_network
    restart: unless-stopped
    depends_on:
      - elemta-dovecot
      - elemta
      - elemta-ldap
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ELK Stack for Log Analysis
  elemta-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elemta-elasticsearch
    environment:
      - node.name=elemta-elasticsearch
      - cluster.name=elemta-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elemta_elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elemta_network
      - monitoring_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  elemta-logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: elemta-logstash
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - elemta_logs:/var/log/elemta:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
    networks:
      - elemta_network
      - monitoring_network
    depends_on:
      elemta-elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  elemta-kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: elemta-kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elemta-elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elemta-elasticsearch:9200"]'
      SERVER_NAME: elemta-kibana
      SERVER_HOST: "0.0.0.0"
      XPACK_SECURITY_ENABLED: "false"
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: "elemta-kibana-encryption-key-32-chars"
    volumes:
      - elemta_kibana_data:/usr/share/kibana/data
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elemta_network
      - monitoring_network
    depends_on:
      elemta-elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Filebeat for log shipping
  elemta-filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: elemta-filebeat
    user: root
    volumes:
      - ./elk/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - elemta_logs:/var/log/elemta:ro
      - elemta_filebeat_data:/usr/share/filebeat/data
    environment:
      - ELASTICSEARCH_HOST=elemta-elasticsearch:9200
      - KIBANA_HOST=elemta-kibana:5601
    networks:
      - elemta_network
      - monitoring_network
    depends_on:
      elemta-elasticsearch:
        condition: service_healthy
    command: filebeat -e -strict.perms=false

networks:
  elemta_network:
    driver: bridge
  monitoring_network:
    driver: bridge

volumes:
  elemta_queue:
    driver: local
  elemta_logs:
    driver: local
  elemta_plugins:
    driver: local
  clamav_data:
    driver: local
  rspamd_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  dovecot_data:
    driver: local
  ldap_data:
    driver: local
  ldap_config:
    driver: local
  roundcube_data:
    driver: local
  elemta_elasticsearch_data:
    driver: local
  elemta_kibana_data:
    driver: local
  elemta_filebeat_data:
    driver: local