version: '3.8'

services:
  elemta:
    image: elemta_node:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: elemta_node0
    restart: unless-stopped
    ports:
      - "2525:2525"
    volumes:
      - elemta_queue:/app/queue
      - elemta_logs:/app/logs
      - elemta_plugins:/app/plugins
      - ./config/elemta.toml:/app/config/elemta.conf
      - ./scripts/api_server.py:/app/api_server.py
    environment:
      - TZ=UTC
      - DEBUG=true
      - NODE_ID=0
      - TEST_MODE=true
      - ELEMTA_CONFIG_PATH=/app/config/elemta.conf
      - API_PORT=8081
    tty: true
    stdin_open: true
    init: true
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2525"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - elemta_network
      - monitoring_network
    depends_on:
      - elemta-clamav
      - elemta-rspamd
      - elemta-api

  elemta-api:
    image: python:3.9-slim
    container_name: elemta_api
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ./scripts/api_server.py:/app/api_server.py
      - elemta_queue:/app/queue:ro
    environment:
      - API_PORT=8081
    command: >
      bash -c "apt-get update && apt-get install -y curl && 
      python3 -u /app/api_server.py"
    networks:
      - elemta_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  elemta-clamav:
    image: clamav/clamav:latest
    container_name: elemta-clamav
    restart: unless-stopped
    networks:
      - elemta_network
    volumes:
      - clamav_data:/var/lib/clamav
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3310"]
      interval: 45s
      timeout: 15s
      retries: 5
      start_period: 180s

  elemta-rspamd:
    image: rspamd/rspamd:latest
    container_name: elemta-rspamd
    restart: unless-stopped
    networks:
      - elemta_network
    volumes:
      - rspamd_data:/var/lib/rspamd
    ports:
      - "11334:11334"  # Web interface
    healthcheck:
      # Use pidof to check if rspamd is running
      test: ["CMD-SHELL", "pidof rspamd || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
      
  # Monitoring services
  elemta-metrics:
    image: python:3.9-slim
    container_name: elemta_metrics
    ports:
      - "8080:8080"
    volumes:
      - ./scripts/metrics_server.py:/app/metrics_server.py
    command: >
      bash -c "apt-get update && apt-get install -y curl && 
      python3 /app/metrics_server.py"
    networks:
      - monitoring_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  prometheus:
    image: prom/prometheus:latest
    container_name: elemta_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  grafana:
    image: grafana/grafana:latest
    container_name: elemta_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=elemta123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring_network
    depends_on:
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  alertmanager:
    image: prom/alertmanager:latest
    container_name: elemta_alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - prometheus

networks:
  elemta_network:
    driver: bridge
  monitoring_network:
    driver: bridge

volumes:
  elemta_queue:
    driver: local
  elemta_logs:
    driver: local
  elemta_plugins:
    driver: local
  clamav_data:
    driver: local
  rspamd_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local 